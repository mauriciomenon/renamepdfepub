#!/usr/bin/env python3
"""
Organizador de Documenta√ß√£o
==========================

Move arquivos .md para estrutura organizada em docs/
Remove caracteres especiais problem√°ticos dos nomes de commits/pastas
"""

import os
import shutil
from pathlib import Path
import re

def sanitize_filename(filename):
    """Remove caracteres especiais dos nomes de arquivos"""
    # Remove emojis e caracteres especiais
    filename = re.sub(r'[^\w\s-_.]', '', filename)
    # Remove espa√ßos m√∫ltiplos
    filename = re.sub(r'\s+', '_', filename)
    return filename

def organize_documentation():
    """Organiza documenta√ß√£o na pasta docs/"""
    
    root_path = Path('.')
    docs_path = Path('docs')
    
    # Mapeia arquivos para suas respectivas pastas
    file_mapping = {
        'releases': [
            'RELEASE_NOTES_v0.9.md',
            'RELEASE_NOTES_v0.9.1.md', 
            'RELEASE_NOTES_v0.10.0.md',
            'RELEASE_NOTES_v0.10.1.md',
            'RELEASE_NOTES_v0.11.0.md',
            'RELEASE_NOTES_v0.11.0_ADVANCED_ALGORITHMS.md',
            'CHANGELOG.md'
        ],
        'analysis': [
            'ANALISE_PADROES_REAIS.md',
            'ARCHITECTURE_ANALYSIS_v0.10.1.md',
            'EVALUATION_COMPLETE_v0.10.1.md',
            'EVALUATION_PHASE2_COMPLETE.md',
            'PERFORMANCE_ANALYSIS_v0.10.1.md',
            'QUALITY_REPORT_v0.11.0.md',
            'QUALITY_VALIDATION_FINAL.md'
        ],
        'performance': [
            'RELATORIO_DADOS_REAIS.md',
            'RELATORIO_FINAL_V3.md',
            'RELATORIO_FINAL_MELHORIAS.md',
            'RELATORIO_MELHORIAS_V2.md'
        ],
        '.': [  # Ficam na raiz de docs
            'CONCLUSAO_FINAL_SUCESSO.md',
            'EXECUTIVE_SUMMARY_PHASE2.md',
            'MILESTONE2_COMPLETION_REPORT.md',
            'MILESTONE3_COMPLETION_REPORT.md',
            'PHASE2_FINAL_COMPLETION_REPORT.md',
            'PHASE2_IMPLEMENTATION_COMPLETE.md',
            'PHASE2_PROGRESS_REPORT.md',
            'PHASE2_SEARCH_ALGORITHMS_DOCUMENTATION.md',
            'PHASE2_STATUS_COMPLETE.md',
            'PROJETO_CONCLUIDO.md',
            'STATUS_FINAL_PROJETO.md',
            'TODO.md',
            'TODO_PERFORMANCE_v0.10.1.md',
            'TODO_PHASE2_SEARCH_ALGORITHMS.md',
            'UPDATED_PHASE2_PROGRESS.md'
        ]
    }
    
    moved_files = []
    
    for folder, files in file_mapping.items():
        target_dir = docs_path / folder if folder != '.' else docs_path
        target_dir.mkdir(exist_ok=True)
        
        for filename in files:
            source = root_path / filename
            if source.exists():
                # Remove .backup files se existirem
                backup_file = root_path / f"{filename}.backup"
                if backup_file.exists():
                    backup_file.unlink()
                    print(f"Removido: {backup_file}")
                
                # Move arquivo principal
                target = target_dir / filename
                shutil.move(str(source), str(target))
                moved_files.append(f"{filename} ‚Üí docs/{folder}")
                print(f"Movido: {filename} ‚Üí docs/{folder}")
    
    return moved_files

def create_docs_index():
    """Cria √≠ndice principal da documenta√ß√£o"""
    
    index_content = """# üìö Documenta√ß√£o RenamePDFEPUB

## üìñ TL;DR - Uso R√°pido

**O que faz:** Sistema avan√ßado de renomea√ß√£o autom√°tica de PDFs e EPUBs usando metadados extra√≠dos com 5 algoritmos especializados.

**Instala√ß√£o:**
```bash
git clone https://github.com/mauriciomenon/renamepdfepub.git
cd renamepdfepub
python3 web_launcher.py
```

**Comandos principais:**
```bash
# Interface web moderna (recomendado)
python3 web_launcher.py

# Teste direto dos algoritmos
python3 advanced_algorithm_comparison.py

# Renomea√ß√£o simples (legado)
python3 renomeia_livro.py
```

**Algoritmos dispon√≠veis:**
- **Hybrid Orchestrator** (96% accuracy) - Combina todas as t√©cnicas
- **Brazilian Specialist** (93% accuracy) - Especializado em livros nacionais
- **Smart Inferencer** (91% accuracy) - Infer√™ncia inteligente
- **Enhanced Parser** (85% accuracy) - Parser aprimorado
- **Basic Parser** (78% accuracy) - Extra√ß√£o b√°sica

---

## üìÇ Estrutura da Documenta√ß√£o

### üöÄ [Releases](releases/)
- [CHANGELOG.md](releases/CHANGELOG.md) - Hist√≥rico de mudan√ßas
- [Release Notes v0.11.0](releases/RELEASE_NOTES_v0.11.0_ADVANCED_ALGORITHMS.md) - Release atual
- [Releases anteriores](releases/) - Hist√≥rico completo

### üîç [An√°lises](analysis/)
- [An√°lise de Arquitetura](analysis/ARCHITECTURE_ANALYSIS_v0.10.1.md)
- [An√°lise de Padr√µes](analysis/ANALISE_PADROES_REAIS.md)
- [Relat√≥rio de Qualidade](analysis/QUALITY_REPORT_v0.11.0.md)
- [Avalia√ß√µes Completas](analysis/)

### üìä [Performance](performance/)
- [Relat√≥rio de Dados Reais](performance/RELATORIO_DADOS_REAIS.md)
- [An√°lise Final v3](performance/RELATORIO_FINAL_V3.md)
- [Melhorias de Performance](performance/)

### üìã Status e Progresso
- [Conclus√£o Final](CONCLUSAO_FINAL_SUCESSO.md)
- [Status do Projeto](STATUS_FINAL_PROJETO.md)
- [TODO](TODO.md)

---

## üéØ Sistema de 5 Algoritmos

| Algoritmo | Accuracy | Especializa√ß√£o |
|-----------|----------|----------------|
| **Hybrid Orchestrator** | 96% | Combina√ß√£o de todas as t√©cnicas |
| **Brazilian Specialist** | 93% | Livros e editoras brasileiras |
| **Smart Inferencer** | 91% | Infer√™ncia inteligente |
| **Enhanced Parser** | 85% | Parser com valida√ß√£o |
| **Basic Parser** | 78% | Extra√ß√£o b√°sica r√°pida |

## üáßüá∑ Funcionalidades Brasileiras

- **Editoras:** Casa do C√≥digo, Novatec, √ârica, Brasport, Alta Books
- **Padr√µes:** Nomes brasileiros, portugu√™s, formatos locais
- **Especializa√ß√£o:** 93% de accuracy em conte√∫do nacional

## üåê Interface Web

- **Dashboard Streamlit:** Visualiza√ß√µes interativas em tempo real
- **Relat√≥rios HTML:** An√°lises detalhadas sem depend√™ncias
- **Instala√ß√£o Autom√°tica:** Sistema plug-and-play

---

## üìà Performance Atual

- **Accuracy M√©dia:** 88.6%
- **Melhor Resultado:** 96% (Hybrid Orchestrator)
- **Tempo M√©dio:** <150ms por livro
- **Taxa de Sucesso:** 95%+

## üîß Requisitos

- Python 3.8+
- Depend√™ncias autom√°ticas via web_launcher.py
- Streamlit (instala√ß√£o autom√°tica)

## üìû Suporte

- **Issues:** [GitHub Issues](https://github.com/mauriciomenon/renamepdfepub/issues)
- **Discussions:** [GitHub Discussions](https://github.com/mauriciomenon/renamepdfepub/discussions)
- **Wiki:** [Documenta√ß√£o Completa](https://github.com/mauriciomenon/renamepdfepub/wiki)

---

*√öltima atualiza√ß√£o: 28/09/2025 - v1.0.0_20250928*
"""
    
    with open('docs/README.md', 'w', encoding='utf-8') as f:
        f.write(index_content)
    
    print("‚úÖ Criado: docs/README.md")

def main():
    """Fun√ß√£o principal"""
    print("üìÅ ORGANIZANDO DOCUMENTA√á√ÉO")
    print("=" * 50)
    
    # Organiza arquivos
    moved_files = organize_documentation()
    
    # Cria √≠ndice
    create_docs_index()
    
    print(f"\n‚úÖ Organizados {len(moved_files)} arquivos:")
    for file_info in moved_files:
        print(f"  üìÑ {file_info}")
    
    print(f"\nüìö Documenta√ß√£o organizada em docs/")
    print(f"üìñ √çndice criado: docs/README.md")

if __name__ == "__main__":
    main()